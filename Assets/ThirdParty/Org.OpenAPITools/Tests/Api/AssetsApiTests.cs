/*
 * Icosa API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AssetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AssetsApiTests : IDisposable
    {
        private AssetsApi instance;

        public AssetsApiTests()
        {
            instance = new AssetsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AssetsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AssetsApi
            //Assert.IsType<AssetsApi>(instance);
        }

        /// <summary>
        /// Test DeleteAssetAssetsAssetDelete
        /// </summary>
        [Test]
        public void DeleteAssetAssetsAssetDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int asset = null;
            //var response = instance.DeleteAssetAssetsAssetDelete(asset);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetAssetAssetsUserurlAsseturlGet
        /// </summary>
        [Test]
        public void GetAssetAssetsUserurlAsseturlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userurl = null;
            //string asseturl = null;
            //var response = instance.GetAssetAssetsUserurlAsseturlGet(userurl, asseturl);
            //Assert.IsType<Asset>(response);
        }

        /// <summary>
        /// Test GetAssetsAssetsGet
        /// </summary>
        [Test]
        public void GetAssetsAssetsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? results = null;
            //int? page = null;
            //bool? curated = null;
            //var response = instance.GetAssetsAssetsGet(results, page, curated);
            //Assert.IsType<List<Asset>>(response);
        }

        /// <summary>
        /// Test GetIdAssetAssetsIdAssetGet
        /// </summary>
        [Test]
        public void GetIdAssetAssetsIdAssetGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int asset = null;
            //var response = instance.GetIdAssetAssetsIdAssetGet(asset);
            //Assert.IsType<Asset>(response);
        }

        /// <summary>
        /// Test UnpublishAssetAssetsAssetUnpublishPatch
        /// </summary>
        [Test]
        public void UnpublishAssetAssetsAssetUnpublishPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int asset = null;
            //var response = instance.UnpublishAssetAssetsAssetUnpublishPatch(asset);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UpdateAssetAssetsAssetPatch
        /// </summary>
        [Test]
        public void UpdateAssetAssetsAssetPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int asset = null;
            //AssetPatchData assetPatchData = null;
            //var response = instance.UpdateAssetAssetsAssetPatch(asset, assetPatchData);
            //Assert.IsType<Asset>(response);
        }

        /// <summary>
        /// Test UploadNewAssetsAssetsPost
        /// </summary>
        [Test]
        public void UploadNewAssetsAssetsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<System.IO.Stream> files = null;
            //var response = instance.UploadNewAssetsAssetsPost(files);
            //Assert.IsType<Object>(response);
        }
    }
}
