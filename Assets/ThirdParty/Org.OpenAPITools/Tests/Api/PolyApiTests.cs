/*
 * Icosa API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing PolyApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PolyApiTests : IDisposable
    {
        private PolyApi instance;

        public PolyApiTests()
        {
            instance = new PolyApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PolyApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PolyApi
            //Assert.IsType<PolyApi>(instance);
        }

        /// <summary>
        /// Test GetPolyAssetPolyAssetsAssetGet
        /// </summary>
        [Test]
        public void GetPolyAssetPolyAssetsAssetGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asset = null;
            //var response = instance.GetPolyAssetPolyAssetsAssetGet(asset);
            //Assert.IsType<PolyAsset>(response);
        }

        /// <summary>
        /// Test GetPolyAssetsListPolyAssetsGet
        /// </summary>
        [Test]
        public void GetPolyAssetsListPolyAssetsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? results = null;
            //int? page = null;
            //bool? curated = null;
            //var response = instance.GetPolyAssetsListPolyAssetsGet(results, page, curated);
            //Assert.IsType<PolyList>(response);
        }

        /// <summary>
        /// Test ImportPolyDataPolyImportPost
        /// </summary>
        [Test]
        public void ImportPolyDataPolyImportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.ImportPolyDataPolyImportPost(requestBody);
            //Assert.IsType<Object>(response);
        }
    }
}
